name: Check Agda
on:
  push:
    branches:
      - trunk
  pull_request:
    branches:
      - trunk

jobs:
  build:
    runs-on: ubuntu-18.04

    env:
      ghc-ver: "8.10.2"
      cabal-ver: "3.4.0.0"

    continue-on-error: ${{ matrix.std-ref == 'master' || matrix.agda-ref == 'master' }}
    strategy:
      fail-fast: false
      matrix:
        std-ref: ["v1.6", "master"]
        agda-ref: ["v2.6.1.3", "master"]

    steps:

    # Install Agda
    - uses: actions/cache@v2
      name: Cache cabal packages
      id: cache-cabal
      with:
        path: |
          ~/.cabal/packages
          ~/.cabal/store
          ~/.cabal/bin
          dist-newstyle
        key: ${{ runner.os }}-${{ env.ghc-ver }}-${{ env.cabal-ver }}-${{ matrix.agda-ref }}

    - name: Install cabal
      if: steps.cache-cabal.outputs.cache-hit != 'true'
      uses: actions/setup-haskell@v1.1.3
      with:
        ghc-version: ${{ env.ghc-ver }}
        cabal-version: ${{ env.cabal-ver }}

    - name: Put cabal programs in PATH
      run: echo "~/.cabal/bin" >> $GITHUB_PATH

    - name: Download Agda from github
      if: steps.cache-cabal.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        repository: agda/agda
        path: agda
        ref: ${{ matrix.agda-ref }}
      
    - name: Install Agda
      if: steps.cache-cabal.outputs.cache-hit != 'true'
      run: |
        cabal update
        cabal install --overwrite-policy=always --ghc-options='-O2 +RTS -M6G -RTS' alex-3.2.5
        cabal install --overwrite-policy=always --ghc-options='-O2 +RTS -M6G -RTS' happy-1.19.12
        cd agda
        mkdir -p doc
        touch doc/user-manual.pdf
        cabal install --overwrite-policy=always --ghc-options='-O1 +RTS -M6G -RTS'

    # Download and compile standard library
    - name: Checkout standard library
      uses: actions/checkout@v2
      with:
        repository: agda/agda-stdlib
        path: stdlib
        ref: ${{ matrix.std-ref }}

    - name: Put standard library in Agda library list
      run: |
        mkdir -p ~/.agda/
        touch ~/.agda/libraries
        echo "$GITHUB_WORKSPACE/stdlib/standard-library.agda-lib" > ~/.agda/libraries

    # Download and compile main library
    - name: Checkout main
      uses: actions/checkout@v2
      with:
        path: main

    - uses: actions/cache@v2
      name: Cache main library
      id: cache-main
      with:
        path: ~/main-build
        key: html-and-tex-${{ runner.os }}-${{ matrix.agda-ver }}-${{ matrix.std-ref }}-${{ hashFiles('main/**') }}
        restore-keys: |
          html-and-tex-${{ runner.os }}-${{ matrix.agda-ver }}-${{ matrix.std-ref }}-
          html-and-tex-${{ runner.os }}-${{ matrix.agda-ver }}-

    - name: Retrieve main library
      if: steps.cache-main.outputs.cache-hit == 'true'
      run: cp -f -R ~/main-build/* $GITHUB_WORKSPACE/main

    - name: Compile main library
      if: steps.cache-main.outputs.cache-hit != 'true'
      run: |
        mkdir -p ~/main-build/_build
        cp -f -R ~/main-build/_build $GITHUB_WORKSPACE/main/_build
        rm -r ~/main-build
        cd main
        bash everything.sh
        agda -i . --safe Everything.agda
        rm Everything.agda
        cd ..
        cp -f -R main/ ~/main-build/
